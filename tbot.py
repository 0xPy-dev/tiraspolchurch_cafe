try:
    import time
    import telebot
    import sqlite3
except:
    import pip
    pip.main(["install", "pyTelegramBotAPI", "time", "sqlite3"])
    import time
    import telebot
    import sqlite3

bot_name = "tbot"
bot = telebot.TeleBot("1852900811:AAGfIUHEcNJx101lPcOAq1aLIyM2MsQHxGk")
link_channel = "https://t.me/joinchat/_bYsD4qEnyJmNDMy"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞
def write_log(event):
    is_bot = "person"
    if event.from_user.is_bot: is_bot = "bot"
    log = time.strftime(f"%d.%m.%Y %H:%M:%S @{event.from_user.username} {is_bot} {event.from_user.language_code}\n")
    with open(f"./log/{bot_name}.log", "a") as w:
        w.write(log)
        w.close()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ë–î.
def get_connection(name_db:str = "file.db"):
    connect = sqlite3.connect(name_db)
    return(connect)

def init_db(force:bool = False):
    connect = get_connection()
    c = connect.cursor()
    if force:
        c.execute("""
            DROP TABLE IF NOT EXIST user_message
        """)
    c.execute("""
        CREATE TABLE IF NOT EXISTS user_message (
            id        INTEGER PRIMARY KEY,
            user_id   INTEGER NOT NULL,
            text      TEXT NOT NULL
        )
    """)
    connect.commit()

def add_message(user_id: int, text: str):
    connect = get_connection()
    c = connect.cursor()
    c.execute("INSERT INTO user_message (user_id, text) VALUES (?, ?)", (user_id, text))
    connect.commit()

init_db()
add_message(user_id=1, text="HELLO MYSQL!")

@bot.message_handler(commands=["start"])
def start(message):
    #bot.send_animation(message.chat.id, gif, caption="GIF")
    write_log(message)
    start_img = open("content/imgs/1.png", "rb")
    bot.send_photo(message.chat.id, start_img, caption=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}, —Ç—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—è –º–µ–Ω—é, –∞ —Ç–∞–∫–∂–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –¥—Ä—É–≥–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞.")

    # –û–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = telebot.types.InlineKeyboardMarkup()

    # –ö–Ω–æ–ø–∫–∏
    key1 = telebot.types.InlineKeyboardButton(text="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –º–µ–Ω—é", callback_data="menu")
    key2 = telebot.types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ —Ü–µ–Ω", callback_data="price_list")
    key3 = telebot.types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="help")
    key4 = telebot.types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact")
    key5 = telebot.types.InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="comment")
    key6 = telebot.types.InlineKeyboardButton(text="–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏", callback_data="my_purchases")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add(key1, key2)
    keyboard.add(key3, key4)
    keyboard.add(key5, key6)
    bot.send_message(message.chat.id, text=f"–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ —Ç–æ–º, —á—Ç–æ —É–º–µ–µ—Ç {bot_name}", reply_markup=keyboard)

@bot.message_handler(commands=["menu"])
def menu(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    key1 = telebot.types.InlineKeyboardButton(text="–í—ã–ø–µ—á–∫–∞", callback_data="–≤—ã–ø–µ—á–∫–∞")
    key2 = telebot.types.InlineKeyboardButton(text="–î–µ—Å–µ—Ä—Ç—ã", callback_data="–¥–µ—Å–µ—Ä—Ç—ã")
    key3 = telebot.types.InlineKeyboardButton(text="–ù–∞–ø–∏—Ç–∫–∏", callback_data="–Ω–∞–ø–∏—Ç–∫–∏")
    keyboard.add(key1, key2, key3)
    #msg = bot.send_message(message.chat.id, text="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ–Ω—é:\n1. –ë–æ—Ä—â\n2. –ì—Ä–µ—á–∫–∞\n3. –ö–æ–º–ø–æ—Ç\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞")#, reply_markup=keyboard)
    #if msg.text in ["1", "2", "3"]:
    #    bot.register_next_step_handler(msg, test)
    #else:
    #    bot.send_message(message.chat.id, text="–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –±–ª—é–¥–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å!", reply_markup=keyboard)

@bot.message_handler(commands=["price_list"])
def price_list(message):
    bot.send_message(message.chat.id, text="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ–Ω—é:\n1. –ë–æ—Ä—â: 5—Ä\n2. –ì—Ä–µ—á–∫–∞: 5—Ä\n3. –ö–æ–º–ø–æ—Ç: 3—Ä")

@bot.message_handler(commands=["help"])
def help(message):
    bot.send_message(message.chat.id, text="–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã:\n/start\n/help\n/menu\n/contact\n/price_list\n/comment\n/my_purchases")

@bot.message_handler(commands=["contact"])
def contact(message):
    bot.send_message(message.chat.id, text=f"–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ –∞–¥—Ä–µ—Å—É {link_channel}")

@bot.message_handler(commands=["comment"])
def comment(message):
    msg = bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤")
    #bot.register_next_step_handler(msg, "text")

@bot.message_handler(commands=["my_purchases"])
def my_purchases(message):
    bot.send_message(message.chat.id, text="–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏:\n1. 28.04.2021 17:29:43  –ì—Ä–µ—á–∫–∞(x3) - 15—Ä\n   [–û–ø–ª–∞—Ç–∞ –ø–æ –∫–∞—Ä—Ç–µ —Ä–∞–¥—É–≥–∞]")

@bot.callback_query_handler(func=lambda call: True)
def callbacker(call):
    if call.data == "help":
        help(call.message)
    elif call.data == "menu":
        menu(call.message)
    elif call.data == "contact":
        contact(call.message)
    elif call.data == "price_list":
        price_list(call.message)
    elif call.data == "comment":
        comment(call.message)
    elif call.data == "my_purchases":
        my_purchases(call.message)
    elif call.data == "make_order":
        test(call.message)
    elif call.data == "–≤—ã–ø–µ—á–∫–∞":
        bot.register_next_step_handler(call.message, "–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        bot.register_next_step_handler(call.message, "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üëç")


#@bot.message_handler(content_types=["text"])
#def text(message):
#    if (message.text == "test"):
#        msg = bot.send_message(message.chat.id, text="Enter any message")
#        bot.register_next_step_handler(msg, test)
#
#def test(message):
#    try:
#        bot.reply_to(message, "Its working")
#    except Exception as e:
#        bot.reply_to(message, "oooops")

def test(msg):
    print(msg.text)
    msg = bot.send_message(msg.chat.id, text="–°–ø–∞—Å–∏–±–æ! –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!")
    bot.register_next_step_handler(msg, test1)

def test1(msg):
    print("Yes!")

bot.polling()
